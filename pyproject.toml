[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "rfc3986"
requires-python = ">=3.8"
authors = [
    { name = "Ian Stapleton Cordasco", email = "graffatcolmingov@gmail.com" },
]
description = "Validating URI References per RFC 3986"
readme = "README.rst"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["version"]

[project.optional-dependencies]
idna2008 = ["idna"]
dev = ["tox"]

[project.urls]
Homepage = "https://rfc3986.readthedocs.io"
Documentation = "https://rfc3986.readthedocs.io/en/latest/"
Issues = "https://github.com/python-hyper/rfc3986/issues"
Source = "https://github.com/python-hyper/rfc3986"

[tool.setuptools.dynamic]
version = { attr = "rfc3986.__version__" }

[tool.ruff]
include = ["src/rfc3986"]
target-version = "py38"
line-length = 79

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PL",
    "TRY",
    "RUF",
]
ignore = [
    "S101",    # Use of assert for typing is understood.
    "PLR2004", # Magic value comparison.
    "SIM105",  # Suppressable exception. contextlib.suppress is a stylistic choice with overhead.
    # "C90",     # McCabe complexity memes.
    # "PLR",     # Complexity things.
    "ANN101", # Type of Self for self is usually implicit.
    "ANN102", # Type of type[Self] for cls is usually implicit.
    "ANN204", # Special method return types are usually implicit or known by type checkers.
    # "ANN401",  # Need to use Any for some places.
    # Recommended ignores by ruff when using ruff format.
    "E111",
    "E114",
    "E117",
    "Q003",
    "COM812",
    "COM819",
    # "E501",
    "ISC001",
    "ISC002",
    # == Others for existing codebase.
    # Allow elif after return, raise, and continue, respectively.
    "RET505",
    "RET506",
    "RET507",
    # Allow catching Exception.
    "BLE001",
    # Allow passing in literal strings to exception constructors.
    "TRY003",
    "EM101",
    "EM102",
    # Allow any number of parameters for a function.
    "PLR0913",
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pyright]
include = ["src/rfc3986"]
ignore = ["tests"]
pythonVersion = "3.8"
typeCheckingMode = "strict"

reportPrivateUsage = "none"
reportImportCycles = "warning"
reportPropertyTypeMismatch = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
